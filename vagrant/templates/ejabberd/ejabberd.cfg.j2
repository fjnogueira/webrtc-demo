%%%
%%%               ejabberd configuration file
%%%

%% loglevel: Verbosity of log files generated by ejabberd.
%% 0: No ejabberd log at all (not recommended)
%% 1: Critical
%% 2: Error
%% 3: Warning
%% 4: Info
%% 5: Debug
%%
{loglevel, 4}.

%% hosts: Domains served by ejabberd.
%% You can define one or several, for example:
%% {hosts, ["example.net", "example.com", "example.org"]}.
%%
{hosts, ["localhost", "<%= @host %>", "<%= @host_ip %>"]}.

%% listen: The ports ejabberd will listen on, which service each is handled
%% by and what options to start it with.
%%
{listen,
 [

  {5222, ejabberd_c2s, [

      %%
      %% If TLS is compiled in and you installed a SSL
      %% certificate, specify the full path to the
      %% file and uncomment this line:
      %%
      %%{certfile, "/etc/ejabberd/ejabberd.pem"}, starttls,

      {access, c2s},
      {shaper, c2s_shaper},
      {max_stanza_size, 65536}
           ]},

  %%
  %% To enable the old SSL connection method on port 5223:
  %%
  %%{5223, ejabberd_c2s, [
  %%			{access, c2s},
  %%			{shaper, c2s_shaper},
  %%			{certfile, "/etc/ejabberd/ejabberd.pem"}, tls,
  %%			{max_stanza_size, 65536}
  %%		       ]},

  {5269, ejabberd_s2s_in, [
         {shaper, s2s_shaper},
         {max_stanza_size, 131072}
        ]},

  %%
  %% ejabberd_service: Interact with external components (transports, ...)
  %%
  %%{8888, ejabberd_service, [
  %%			    {access, all},
  %%			    {shaper_rule, fast},
  %%			    {ip, {127, 0, 0, 1}},
  %%			    {hosts, ["icq.example.org", "sms.example.org"],
  %%			     [{password, "secret"}]
  %%			    }
  %%			   ]},

  %%
  %% ejabberd_stun: Handles STUN Binding requests
  %%
  %%{{3478, udp}, ejabberd_stun, []},

  {5280, ejabberd_http, [
       %%{request_handlers,
       %% [
       %%  {["pub", "archive"], mod_http_fileserver}
       %% ]},
       captcha,
       http_bind,
       http_poll,
       %%register,
       web_admin
      ]}

 ]}.

%% auth_method: Method used to authenticate the users.
%% The default method is the internal.
%% If you want to use a different method,
%% comment this line and enable the correct ones.
%%
{auth_method, internal}.

%% The "normal" shaper limits traffic speed to 1000 B/s
%%
{shaper, normal, {maxrate, 1000}}.

%% The "fast" shaper limits traffic speed to 50000 B/s
%%
{shaper, fast, {maxrate, 50000}}.

%% This option specifies the maximum number of elements in the queue
%% of the FSM. Refer to the documentation for details.
%%
{max_fsm_queue, 1000}.

%% The 'admin' ACL grants administrative privileges to XMPP accounts.
%% You can put here as many accounts as you want.
%%
{acl, admin, {user, "admin", "{{hostname}}"}}.

%% Local users: don't modify this line.
%%
{acl, local, {user_regexp, ""}}.

%% Maximum number of simultaneous sessions allowed for a single user:
{access, max_user_sessions, [{10, all}]}.

%% Maximum number of offline messages that users can have:
{access, max_user_offline_messages, [{5000, admin}, {100, all}]}.

%% This rule allows access only for local users:
{access, local, [{allow, local}]}.

%% Only non-blocked users can use c2s connections:
{access, c2s, [{deny, blocked},
         {allow, all}]}.

%% For C2S connections, all users except admins use the "normal" shaper
{access, c2s_shaper, [{none, admin},
          {normal, all}]}.

%% All S2S connections use the "fast" shaper
{access, s2s_shaper, [{fast, all}]}.

%% Only admins can send announcement messages:
{access, announce, [{allow, admin}]}.

%% Only admins can use the configuration interface:
{access, configure, [{allow, admin}]}.

%% Admins of this server are also admins of the MUC service:
{access, muc_admin, [{allow, admin}]}.

%% Only accounts of the local ejabberd server can create rooms:
{access, muc_create, [{allow, local}]}.

%% All users are allowed to use the MUC service:
{access, muc, [{allow, all}]}.

%% Only accounts on the local ejabberd server can create Pubsub nodes:
{access, pubsub_createnode, [{allow, local}]}.

%% In-band registration allows registration of any possible username.
%% To disable in-band registration, replace 'allow' with 'deny'.
{access, register, [{allow, all}]}.

%% language: Default language used for server messages.
%%
{language, "en"}.

%% Modules enabled in all ejabberd virtual hosts.
%%
{modules,
 [
  {mod_adhoc,    []},
  {mod_announce, [{access, announce}]}, % recommends mod_adhoc
  {mod_blocking,[]}, % requires mod_privacy
  {mod_caps,     []},
  {mod_configure,[]}, % requires mod_adhoc
  {mod_disco,    []},
  %%{mod_echo,   [{host, "echo.localhost"}]},
  {mod_irc,      []},
  {mod_http_bind, []},
  %%{mod_http_fileserver, [
  %%                       {docroot, "/var/www"},
  %%                       {accesslog, "/var/log/ejabberd/access.log"}
  %%                      ]},
  {mod_last,     []},
  {mod_muc,      [
      %%{host, "conference.@HOST@"},
      {access, muc},
      {access_create, muc_create},
      {access_persistent, muc_create},
      {access_admin, muc_admin}
     ]},
  %%{mod_muc_log,[]},
  {mod_offline,  [{access_max_user_messages, max_user_offline_messages}]},
  {mod_ping,     []},
  %%{mod_pres_counter,[{count, 5}, {interval, 60}]},
  {mod_privacy,  []},
  {mod_private,  []},
  %%{mod_proxy65,[]},
  {mod_pubsub,   [
      {access_createnode, pubsub_createnode},
      {ignore_pep_from_offline, true}, % reduces resource comsumption, but XEP incompliant
      %%{ignore_pep_from_offline, false},  % XEP compliant, but increases resource comsumption
      {last_item_cache, false},
      {plugins, ["flat", "hometree", "pep"]}  % pep requires mod_caps
     ]},
  {mod_register, [
      %%
      %% Protect In-Band account registrations with CAPTCHA.
      %%
      %%{captcha_protected, true},

      %%
      %% Set the minimum informational entropy for passwords.
      %%
      %%{password_strength, 32},

      %%
      %% After successful registration, the user receives
      %% a message with this subject and body.
      %%
      {welcome_message, {"Welcome!",
             "Hi.\nWelcome to this XMPP server."}},

      %%
      %% When a user registers, send a notification to
      %% these XMPP accounts.
      %%
      %%{registration_watchers, ["admin1@example.org"]},

      %%
      %% Only clients in the server machine can register accounts
      %%
      {ip_access, [{allow, "127.0.0.0/8"},
             {deny, "0.0.0.0/0"}]},

      %%
      %% Local c2s or remote s2s users cannot register accounts
      %%
      %%{access_from, deny},

      {access, register}
     ]},
  %%{mod_register_web, [
      %%
      %% When a user registers, send a notification to
      %% these XMPP accounts.
      %%
      %%{registration_watchers, ["admin1@example.org"]}
  %%		 ]},
  {mod_roster,   []},
  %%{mod_service_log,[]},
  {mod_shared_roster,[]},
  {mod_stats,    []},
  {mod_time,     []},
  {mod_vcard,    []},
  {mod_version,  []}
 ]}.
